{
  parserClass="kz.pompei.lanact.gen.language.ActParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Act"
  psiImplClassSuffix="Impl"
  psiPackage="kz.pompei.lanact.gen.language.psi"
  psiImplPackage="kz.pompei.lanact.gen.language.impl"

  elementTypeHolderClass="kz.pompei.lanact.gen.language.ActTokenTypes"
  elementTypeClass="kz.pompei.lanact.parser.ActElementType"
  tokenTypeClass="kz.pompei.lanact.parser.ActTokenType"


}

actFile ::= COMMENT* CLASS id statement_do_done

id ::= WORD (WORD|NUMBER)*

private statements ::= statement*

statement ::= statement_expr | statement_if | statement_do_done

statement_do_done ::= DO statements DONE

statement_expr ::= LET expr assign_part?

assign_part ::= ASSIGN expr

statement_if ::= IF expr statements statement_else_if* statement_else? END IF

//
// Expressions
//

expr_str ::= STR_LEFT expr (STR_INNER expr)* STR_RIGHT

statement_else_if ::= ELSIF expr statements

statement_else ::= ELSE statements

private expr ::= expr_mul

expr_dot ::= expr_primary (DOT id cortege?)*

private expr_primary ::= expr_call | expr_const | expr_square | expr_str | expr_paren

expr_call ::= id cortege?

expr_paren  ::= PAR_OPEN expr PAR_CLOSE
expr_square ::=  SQ_OPEN expr SQ_CLOSE
private expr_const ::= NUMBER | YES | NO | STR_CONST

//
//
// Arithmetic Expressions
//
//

private op_add ::= PLUS | MINUS
expr_add ::= expr_dot (op_mul expr_dot)*

private op_mul ::= MUL | DIV
expr_mul ::= expr_add (op_add expr_add)*

//
// Cortege
//

cortege ::= PAR_OPEN (expr (COMMA expr)* COMMA?)? PAR_CLOSE
